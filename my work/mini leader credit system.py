import pandas as pd

ლუკა_ტატუაშვილი = 1000
დემე_აზმაიფარაშვილი = 0
დავით_ქუთელია = 0
დავით_ბერაია = 0
ალექსანდრე_სამუშია = 0
გოგა_ასათიანი = 0
დიმიტრი_უგრეხელიძე = 0
გიორგი_მამუკაშვილი = 0
გიორგი_რუსიშვილი = 0
გიორგი_როდონაია = 0
გიორგი_მამისაშვილი = 0
გიორგი_ჭყონიძე = 0
დავით_მეფარიშვილი = 0
ნიკოლოზ_მეგრელიშვილი = 0
სანდრო_სურიაკოვი = 0
ლუკა_კელეპტრიშვილი = 0
ნიკა_სამხარაძე = 30
მათე_ხუციშვილი = 1000
ლუკა_ჭანიშვილი = 0
დავით_ჩოხელი = 0
ანდრია_გობეჯიშვილი = 0
ნიკოლოზ_იობიძე = 0
გურამი_ხურცილავა = 0
ნიკოლოზ_ასაბაშვილი = 0
ვიქტორია_სიხარულიძე = 0
ანდრია_ეფიმოვსკი = 0
დავით_ალოევი = 0
ლუკა_თამაზაშვილი = 1000
კესო_ქარელი = 0
რაფაელ_ნიგურიანი = 0

players_data = [
    {"სახელი": "ლუკა ტატუაშვილი", "credits": [ლუკა_ტატუაშვილი]},
    {"სახელი": "დემე აზმაიფარაშვილი", "credits": [დემე_აზმაიფარაშვილი]},
    {"სახელი": "დავით ქუთელია", "credits": [დავით_ქუთელია]},
    {"სახელი": "დავით ბერაია", "credits": [დავით_ბერაია]},
    {"სახელი": "ალექსანდრე სამუშია", "credits": [ალექსანდრე_სამუშია]},
    {"სახელი": "გოგა ასათიანი", "credits": [გოგა_ასათიანი]},
    {"სახელი": "დიმიტრი უგრეხელიძე", "credits": [დიმიტრი_უგრეხელიძე]},
    {"სახელი": "გიორგი მამუკაშვილი", "credits": [გიორგი_მამუკაშვილი]},
    {"სახელი": "გიორგი რუსიშვილი", "credits": [გიორგი_რუსიშვილი]},
    {"სახელი": "გიორგი როდონაია", "credits": [გიორგი_როდონაია]},
    {"სახელი": "გიორგი მამისაშვილი", "credits": [გიორგი_მამისაშვილი]},
    {"სახელი": "გიორგი ჭყონიძე", "credits": [გიორგი_ჭყონიძე]},
    {"სახელი": "დავით მეფარიშვილი", "credits": [დავით_მეფარიშვილი]},
    {"სახელი": "ნიკოლოზ მეგრელიშვილი", "credits": [ნიკოლოზ_მეგრელიშვილი]},
    {"სახელი": "სანდრო სურიაკოვი", "credits": [სანდრო_სურიაკოვი]},
    {"სახელი": "ლუკა კელეპტრიშვილი", "credits": [ლუკა_კელეპტრიშვილი]},
    {"სახელი": "ნიკა სამხარაძე", "credits": [ნიკა_სამხარაძე]},
    {"სახელი": "მათე ხუციშვილი", "credits": [მათე_ხუციშვილი]},
    {"სახელი": "ლუკა ჭანიშვილი", "credits": [ლუკა_ჭანიშვილი]},
    {"სახელი": "დავით ჩოხელი", "credits": [დავით_ჩოხელი]},
    {"სახელი": "ანდრია გობეჯიშვილი", "credits": [ანდრია_გობეჯიშვილი]},
    {"სახელი": "ნიკოლოზ იობიძე", "credits": [ნიკოლოზ_იობიძე]},
    {"სახელი": "გურამი ხურწყილავა", "credits": [გურამი_ხურცილავა]},
    {"სახელი": "ნიკოლოზ ასაბაშვილი", "credits": [ნიკოლოზ_ასაბაშვილი]},
    {"სახელი": "ვიქტორია სიხარულიძე", "credits": [ვიქტორია_სიხარულიძე]},
    {"სახელი": "ანდრია ეფიმოვსკი", "credits": [ანდრია_ეფიმოვსკი]},
    {"სახელი": "დავით ალოევი", "credits": [დავით_ალოევი]},
    {"სახელი": "ლუკა თამაზაშვილი", "credits": [ლუკა_თამაზაშვილი]},
    {"სახელი": "კესო ქარელი", "credits": [კესო_ქარელი]},
    {"სახელი": "რაფაელ ნიგურიანი", "credits": [რაფაელ_ნიგურიანი]}
]

def calculate_score(credits):
    return sum(credits)

for player in players_data:
    player['score'] = calculate_score(player['credits'])

sorted_players = sorted(players_data, key=lambda x: x['score'], reverse=True)

df = pd.DataFrame(sorted_players)

# მინი ლიდერები (ვისაც 1000 ან მეტი ქულა აქვს)
mini_leaders = [player for player in players_data if player['score'] >= 1000]

df_all = pd.DataFrame(players_data)
df_mini_leaders = pd.DataFrame(mini_leaders)

print("ყველა მოსწავლე:")
print(df_all[['სახელი', 'score']])

print("\nმინი ლიდერები:")
print(df_mini_leaders[['სახელი', 'score']])
